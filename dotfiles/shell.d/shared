#!/usr/bin/env zsh
#
# These functions are utilities used within other shell.d scripts and shouldn't
# have any external dependencies.

##
## meaning - get alias of a command, or the command itself if it doesn't have any
##

meaning() {
    if (( $+aliases[$1] )); then
        echo $aliases[$1]
    else
        echo $1
    fi
}

##
## Load function lazily (to speedup shell startup)
## Inspired by https://github.com/lukechilds/zsh-nvm
##
## Parameters:
##  - $1: callback function to call lazily
##  - ${@:2}: list of binaries that depend on the callback
##

_lazy_load() {
    local function_to_load=$1
    local binaries=("${@:2}")

    # Remove any binaries that conflict with current aliases
    local cmds=()
    for bin in "${binaries[@]}"; do
        [[ "$(which "$bin" 2> /dev/null)" = "$bin: aliased to "* ]] || cmds+=($bin)
    done

    # Create a function for each command
    for cmd in "${cmds[@]}"; do
        # When called, unset all lazy loaders, then run loading function
        eval "$cmd(){
            echo 'Lazy loading...'
            unset -f ${cmds[*]} > /dev/null 2>&1
            $function_to_load
            $cmd \"\$@\"
        }"
    done
}
